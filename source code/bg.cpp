//=============================================================================
//
// 背景処理 [bg.h]
// Author : 羽鳥太一
//
//=============================================================================
//=============================================================================
// インクルード
//=============================================================================
#include "bg.h"

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CBg::CBg(CObject::PRIORITY Priority) : CObject3D(Priority)
{
	m_uv_move_speed = D3DXVECTOR2(0.0f, 0.0f);
	m_uv_pos = D3DXVECTOR2(0.0f, 0.0f);
}

//=============================================================================
// デフォルトデストラクタ
//=============================================================================
CBg::~CBg()
{

}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CBg::Init(void)
{	
	CObject3D::Init();

	SetObjType(CObject::OBJTYPE::BG);

	return S_OK;
}

//=============================================================================
// 終了
//=============================================================================
void CBg::Uninit(void)
{
	CObject3D::Uninit();
}

//=============================================================================
// 更新
//=============================================================================
void CBg::Update(void)
{
	m_uv_pos += m_uv_move_speed;
	SetTex(m_uv_pos.x, m_uv_pos.y);
	if (m_uv_pos.x < 0.0f)
	{
		m_uv_pos.x += 1.0f;
	}
	else if (m_uv_pos.x > 1.0f)
	{
		m_uv_pos.x -= 1.0f;
	}
	if (m_uv_pos.y < 0.0f)
	{
		m_uv_pos.y += 1.0f;
	}
	else if (m_uv_pos.y > 1.0f)
	{
		m_uv_pos.y -= 1.0f;
	}
}

//=============================================================================
// 描画
//=============================================================================
void CBg::Draw(void)
{
	CObject3D::Draw();
}

//=============================================================================
// 生成
//=============================================================================
CBg *CBg::Create(const D3DXVECTOR3 & pos, const D3DXVECTOR3 & size, const D3DXVECTOR3 & rot, D3DXVECTOR2 uv_move_speed)
{
	CBg *bg = nullptr;

	if (bg == nullptr)
	{
		bg = new CBg;
		if (bg != nullptr)
		{
			bg->m_pos = pos;
			bg->m_size = size;
			bg->m_rot = rot;
			bg->m_uv_move_speed = uv_move_speed;
			bg->Init();
		}
	}

	return bg;
}
