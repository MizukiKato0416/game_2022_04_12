//=============================================================================
//
// load処理 [load.cpp]
// Author : 羽鳥太一
//
//=============================================================================
//=============================================================================
// インクルード
//=============================================================================
#include "load.h"
#include "floor.h"

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CLoad::CLoad(CObject::PRIORITY priorty) : CObject(priorty)
{

}

//=============================================================================
// デフォルトデストラクタ
//=============================================================================
CLoad::~CLoad()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CLoad::Init(void)
{
	m_floor = CFloor::Create(m_pos, D3DXVECTOR3(1000.0f, 0.0f, 100.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f));

	switch (m_happening_type)
	{
	case HAPPENING_TYPE::NONE:
		break;
	default:
		break;
	}

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CLoad::Uninit(void)
{
	m_floor->Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CLoad::Update(void)
{
	D3DXVECTOR3 pos = m_floor->GetPos();
	pos.x -= 3.0f;
	m_floor->SetPos(pos, D3DXVECTOR3(1000.0f, 0.0f, 100.0f));
}

//=============================================================================
// 描画処理
//=============================================================================
void CLoad::Draw(void)
{

}

//================================================
//生成処理
//================================================
CLoad *CLoad::Create(const D3DXVECTOR3 &pos, const HAPPENING_TYPE &type)
{
	//インスタンスの生成
	CLoad *load = nullptr;
	if (load == nullptr)
	{
		load = new CLoad();
		if (load != nullptr)
		{
			load->m_pos = pos;
			load->m_happening_type = type;
			load->Init();
		}
	}
	return load;
}